B.\"Manpage for simple shell
.\"Created by Monica Njoki and John Kinyua

.TH ReBASH 1 "February 2023" "ALX" "ReBA SHELL - Simple Shell man page"

.SH NAME
ReBASH\fR \- simple UNIX command interpreter

.SH SYNOPSIS
ReBASH\fR [\fIfilename\fR]

.SH COPYRIGHT
ReBASh is Copyright (C) 2023 by Monica Njoki and John Kinyua

.SH DESCRIPTION
ReBASH\fR is a sh-compatible command language interpreter that executes commands read from the standard input or from a file.

.SH ARGUMENTS
If arguments remain after option processing, the first argument is assumed to be the name of a file containing shell commands. ReBASH reads and executes commands from this file, then exits. ReBASH exit status is the exit status of the last command executed in the script. If no commands are executed, the exit status is 0. An attempt is first made to open the file in the current directory, and, if no file is found, then the shell searches the directories in PATH for the script.

.SH INVOCATION
ReBASH is started with the standard input connected to the terminal (as determined by \fIisatty(3)\fR), the interactive mode is executed. Also non-interactively option can be executed.
When ReBASH is executed interactively, the prompt is displayed  \fI^-^ \fR to read any command, the command line argument is invoked and is treated as the first argument.

.SH DEFINITIONS
The following definitions are used throughout the rest of this document.

- \fIblank\fR

A space or tab.

- \fIword\fR

A sequence of characters considered as a single unit by the shell. Also known as a token\fR.

- \fIname\fR

A word consisting only of alphanumeric characters and underscores, and beginning with an alphabetic character or an underscore. Also referred to as an identifier\fR.

control operator\fR
A token that performs a control function. It is one of the following symbols:
|| & && ; ;;

.SH Command Execution
After a command has been split into words, if it results in a simple command and an optional list of arguments, the following actions are taken.

If the command name contains no slashes, the shell attempts to locate it. If there exists a shell function by that name, that function is invoked. If the name does not match a function, the shell searches for it in the list of shell builtins. If a match is found, that builtin is invoked.

If the name is neither a shell function nor a builtin, and contains no slashes, \fIReBASH\fR searches each element of the \fIPATH\fR for a directory containing an executable file by that name. \fIReBASH\fR uses a hash table to remember the full pathnames of executable files. A full search of the directories in \fIPATH\fR is performed only if the command is not found in the hash table. If the search is unsuccessful, the shell searches for a defined shell function named "command not found". If that function exists, it is invoked with the original command and the original command's arguments as its arguments, and the function's exit status becomes the exit status of the shell. If that function is not defined, the shell prints an error message and returns an exit status of 127.

